<?php

namespace App\Http\Controllers;

use App\Models\Comment;
use App\Models\Company;
use App\Models\ImagesCompany;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class DeleteController extends Controller
{
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function DeleteProfile($username, $id)
    {
        // $username = trim($username);
        $auth = auth('sanctum')->user();
        $authId = $auth->id;
        // dd($authId);
        if (!$auth) {
            return response()->json(['Anda belum terdaftar']);
        }

        $user = User::where('username', $username)->first();
        $userId = $user->id;
        // dd($userId);

        if ($userId !== $authId) {
            return response()->json(['Invalid data Id']);
        }


        if ($auth && $auth->role == 'SuperAdmin') {
            $user = User::find($id);
            CloudinaryStorage::delete($user->images);
            $user->update(['profile' => 'https://bit.ly/3pETYdu']);
            return response()->json(['message' => 'berhasil dihapus']);
        } else {
            if ($userId !== $authId) {
                return response()->json(['message' => 'Ini Bukan Akun Anda']);
            }
            $user = User::find($userId);
            CloudinaryStorage::delete($user->images);
            $user->update(['profile' => 'https://bit.ly/3pETYdu']);
            return response()->json(['message' => 'berhasil dihapus']);
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function DeleteCompany($username, $company_id)
    {
        $auth = auth('sanctum')->user();
        $authId = $auth->id;
        if (!$auth) {
            return response()->json(['Anda belum terdaftar']);
        }

        $user = User::where('username', $username)->first();
        $userId = $user->id;


        if ($userId !== $authId) {
            return response()->json(['Invalid data Id']);
        }

        $company = Company::find($company_id);
        if ($auth->role == 'SuperAdmin') {
            $images = ImagesCompany::where('company_id', $company_id)->get();
            foreach ($images as $image) {
                CloudinaryStorage::delete($image->images);
                $image->delete();
            }
            $company->delete();
        } elseif (!$company) {
            return response()->json(['error' => 'Perusahaan tidak ditemukan']);
        }
        if ($company->user_id !== $userId) {
            return response()->json(['error' => 'Anda tidak memiliki izin untuk menghapus toko ini']);
        }

        $images = ImagesCompany::where('company_id', $company_id)->get();
        foreach ($images as $image) {
            CloudinaryStorage::delete($image->images);
            $image->delete();
        }

        $company->delete();

        return response()->json(['Toko berhasil Dihapus']);
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function DeleteComment(Request $request, $username, $id)
    {
        $comment = Comment::find($id);
        $ImagesId = $comment->images_companies_id;

        $auth = auth('sanctum')->user();
        $authId = $auth->id;

        $user = User::where('username', $username)->first();
        $userId = $user->id;

        $ImagesCompany = ImagesCompany::where('id', $ImagesId)->where('user_id', $userId)->first();

        if (!$comment) {
            return response()->json(['message' => 'Komentar tidak ditemukan.'], 404);
        }

        if ($comment->user_id !== $authId && $userId !== $authId) {
            return response()->json(['message' => 'Anda tidak diizinkan untuk menghapus komentar ini.'], 403);
        }

        // Hapus komentar
        $comment->delete();

        return response()->json(['message' => 'Komentar berhasil dihapus.']);
    }
}
